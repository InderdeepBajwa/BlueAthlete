{"ast":null,"code":"import _objectSpread from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\BlueAthlete\\\\Blue\\\\src\\\\components\\\\SignUp\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes'; // Initializing signup variables\n\nvar INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nvar SignUpPage = function SignUpPage() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"SignUp\"), React.createElement(SignUpForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nvar SignUpForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUpForm, _Component);\n\n  function SignUpForm(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUpForm).call(this, props)); // Mimiking initial state of no parameters into Signup state\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.onSubmit = function (event) {\n      var _this$state = _this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          passwordOne = _this$state.passwordOne;\n\n      _this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(function (authUser) {\n        _this.setState(_objectSpread({}, INITIAL_STATE));\n      });\n    };\n\n    _this.onChange = function (event) {};\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _this;\n  } // Import fields to capture Singup information\n\n\n  _createClass(SignUpForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo,\n          error = _this$state2.error; // Copies empty Signup state\n      // Password validation\n\n      var isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n      return (// TODO: Implement HTML form here\n        React.createElement(\"form\", {\n          onSubmit: this.onSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          name: \"username\",\n          defaultValue: username,\n          onChange: this.onChange,\n          type: \"text\",\n          placeholder: \"Full Name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          name: \"email\",\n          defaultValue: email,\n          onChange: this.onChange,\n          type: \"text\",\n          placeholder: \"Email Address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          name: \"passwordOne\",\n          defaultValue: passwordOne,\n          onChange: this.onChange,\n          type: \"password\",\n          placeholder: \"Password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          name: \"passwordTwo\",\n          defaultValue: passwordTwo,\n          onChange: this.onChange,\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          disabled: isInvalid,\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Sign Up\"), // Error handling\n        error && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, error.message))\n      );\n    }\n  }]);\n\n  return SignUpForm;\n}(Component);\n\nvar SignUpLink = function SignUpLink() {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Don't have an account? \", React.createElement(Link, {\n    to: ROUTES.SIGN_UP,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Sign Up\"));\n};\n\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","map":{"version":3,"sources":["G:\\BlueAthlete\\Blue\\src\\components\\SignUp\\index.js"],"names":["React","Component","Link","ROUTES","INITIAL_STATE","username","email","passwordOne","passwordTwo","error","SignUpPage","SignUpForm","props","onChange","event","setState","target","name","value","onSubmit","state","firebase","doCreateUserWithEmailAndPassword","then","authUser","isInvalid","message","SignUpLink","SIGN_UP"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\n// Initializing signup variables\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null\r\n};\r\n\r\nconst SignUpPage = () => (\r\n    <div>\r\n        <h1>SignUp</h1>\r\n        <SignUpForm />\r\n    </div>\r\n);\r\n\r\nclass SignUpForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Mimiking initial state of no parameters into Signup state\r\n        this.state = {...INITIAL_STATE};\r\n    }\r\n\r\n    // Import fields to capture Singup information\r\n    onChange = event => {\r\n        this.setState({ [event.target.name ]: event.target.value });\r\n    };\r\n\r\n    onSubmit = event => {\r\n        const { username, email, passwordOne } = this.state;\r\n\r\n        this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                this.setState({ ...INITIAL_STATE});\r\n            })\r\n    }\r\n\r\n    onChange = event => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error\r\n        } = this.state; // Copies empty Signup state\r\n\r\n        // Password validation\r\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\r\n\r\n        return (\r\n            // TODO: Implement HTML form here\r\n            <form onSubmit={this.onSubmit}>\r\n                <input\r\n                    name=\"username\"\r\n                    defaultValue={username}\r\n                    onChange={this.onChange}\r\n                    type = \"text\"\r\n                    placeholder=\"Full Name\"\r\n                />\r\n                <input\r\n                    name=\"email\"\r\n                    defaultValue={email}\r\n                    onChange={this.onChange}\r\n                    type = \"text\"\r\n                    placeholder=\"Email Address\"\r\n                />\r\n                <input\r\n                    name=\"passwordOne\"\r\n                    defaultValue={passwordOne}\r\n                    onChange={this.onChange}\r\n                    type = \"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                <input\r\n                    name=\"passwordTwo\"\r\n                    defaultValue={passwordTwo}\r\n                    onChange={this.onChange}\r\n                    type = \"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n\r\n        {\r\n            // Error handling\r\n            error && <p>{error.message}</p>\r\n        }\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n    <p>\r\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n    </p>\r\n);\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm, SignUpLink };\r\n"]},"metadata":{},"sourceType":"module"}