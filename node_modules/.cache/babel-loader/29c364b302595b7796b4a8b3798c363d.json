{"ast":null,"code":"var _jsxFileName = \"G:\\\\BlueAthlete\\\\Blue\\\\src\\\\components\\\\Admin\\\\index.js\";\nimport React from 'react';\nimport * as ROLES from '../../constants/roles';\nimport { withAuthorization } from '../Session';\n\nvar AdminPage = function AdminPage() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Admin\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"RESTRICTED AREA! Only users with the admin role are authorized.\"));\n};\n\nvar condition = function condition(authUser) {\n  return authUser && !!authUser.roles[ROLES.ADMIN];\n};\n\nexport default withAuthorization(condition)(AdminPage);","map":{"version":3,"sources":["G:\\BlueAthlete\\Blue\\src\\components\\Admin\\index.js"],"names":["React","ROLES","withAuthorization","AdminPage","condition","authUser","roles","ADMIN"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;AACA,SAASC,iBAAT,QAAkC,YAAlC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAFJ,CADc;AAAA,CAAlB;;AASA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,QAAQ;AAAA,SACtBA,QAAQ,IAAI,CAAC,CAACA,QAAQ,CAACC,KAAT,CAAeL,KAAK,CAACM,KAArB,CADQ;AAAA,CAA1B;;AAGA,eAAeL,iBAAiB,CAACE,SAAD,CAAjB,CAA6BD,SAA7B,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport * as ROLES from '../../constants/roles';\r\nimport { withAuthorization } from '../Session';   \r\n\r\nconst AdminPage = () => (\r\n    <div>\r\n        <h1>Admin</h1>\r\n        <p>\r\n            RESTRICTED AREA! Only users with the admin role are authorized.\r\n        </p>\r\n    </div>\r\n);\r\n\r\nconst condition = authUser =>\r\n    authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default withAuthorization(condition)(AdminPage);\r\n"]},"metadata":{},"sourceType":"module"}