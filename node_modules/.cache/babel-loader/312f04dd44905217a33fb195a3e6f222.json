{"ast":null,"code":"import _classCallCheck from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\BlueAthlete\\\\Blue\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\BlueAthlete\\\\Blue\\\\src\\\\components\\\\Session\\\\withAuthorization.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { renderComponent, compose } from 'recompose';\n\nvar withAuthorization = function withAuthorization(condition) {\n  var withAuthorization =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(withAuthorization, _React$Component);\n\n    function withAuthorization() {\n      _classCallCheck(this, withAuthorization);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(withAuthorization).apply(this, arguments));\n    }\n\n    _createClass(withAuthorization, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this = this;\n\n        this.listener = this.props.firebase.auth.onAuthStateChange(function (authUser) {\n          if (!condition(authUser)) {\n            _this.props.history.push(ROUTES.SIGN_IN);\n          }\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.listener();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Component, Object.assign({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }));\n      }\n    }]);\n\n    return withAuthorization;\n  }(React.Component);\n\n  return compose(withRouter, withFirebase)(withAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["G:\\BlueAthlete\\Blue\\src\\components\\Session\\withAuthorization.js"],"names":["React","Component","withRouter","withFirebase","ROUTES","renderComponent","compose","withAuthorization","condition","listener","props","firebase","auth","onAuthStateChange","authUser","history","push","SIGN_IN"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,WAAzC;;AAEA,IAAMC,iBAAiB,GAAG,2BAAAC,SAAS,EAAI;AAAA,MAC7BD,iBAD6B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAEX;AAAA;;AAChB,aAAKE,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,iBAAzB,CACZ,UAAAC,QAAQ,EAAI;AACR,cAAG,CAACN,SAAS,CAACM,QAAD,CAAb,EAAyB;AACrB,YAAA,KAAI,CAACJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,OAA/B;AACH;AACJ,SALW,CAAhB;AAOH;AAV8B;AAAA;AAAA,6CAYR;AACnB,aAAKR,QAAL;AACH;AAd8B;AAAA;AAAA,+BAgBtB;AACL,eACI,oBAAC,SAAD,oBAAe,KAAKC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH;AApB8B;;AAAA;AAAA,IACHV,KAAK,CAACC,SADH;;AAuBnC,SAAOK,OAAO,CACVJ,UADU,EAEVC,YAFU,CAAP,CAGLI,iBAHK,CAAP;AAIH,CA3BD;;AA6BA,eAAeA,iBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { renderComponent, compose } from 'recompose';\r\n\r\nconst withAuthorization = condition => {\r\n    class withAuthorization extends React.Component {\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.auth.onAuthStateChange(\r\n                authUser => {\r\n                    if(!condition(authUser)) {\r\n                        this.props.history.push(ROUTES.SIGN_IN);\r\n                    }\r\n                },\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n    \r\n        render() {\r\n            return (\r\n                <Component {...this.props} />\r\n            );\r\n        }\r\n    }\r\n\r\n    return compose(\r\n        withRouter,\r\n        withFirebase,\r\n    )(withAuthorization);\r\n};\r\n\r\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}